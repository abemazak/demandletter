"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-letter/route";
exports.ids = ["app/api/generate-letter/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-letter%2Froute&page=%2Fapi%2Fgenerate-letter%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-letter%2Froute.ts&appDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-letter%2Froute&page=%2Fapi%2Fgenerate-letter%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-letter%2Froute.ts&appDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_abema_OneDrive_Desktop_demandletter_src_app_api_generate_letter_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/generate-letter/route.ts */ \"(rsc)/./src/app/api/generate-letter/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-letter/route\",\n        pathname: \"/api/generate-letter\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-letter/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\abema\\\\OneDrive\\\\Desktop\\\\demandletter\\\\src\\\\app\\\\api\\\\generate-letter\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_abema_OneDrive_Desktop_demandletter_src_app_api_generate_letter_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/generate-letter/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1sZXR0ZXIlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdlbmVyYXRlLWxldHRlciUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdlbmVyYXRlLWxldHRlciUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhYmVtYSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2RlbWFuZGxldHRlciU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDYWJlbWElNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNkZW1hbmRsZXR0ZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDMkM7QUFDeEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYW5keWxhdy8/MzczNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxhYmVtYVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGRlbWFuZGxldHRlclxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxnZW5lcmF0ZS1sZXR0ZXJcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dlbmVyYXRlLWxldHRlci9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlLWxldHRlclwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuZXJhdGUtbGV0dGVyL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcYWJlbWFcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxkZW1hbmRsZXR0ZXJcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcZ2VuZXJhdGUtbGV0dGVyXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2dlbmVyYXRlLWxldHRlci9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-letter%2Froute&page=%2Fapi%2Fgenerate-letter%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-letter%2Froute.ts&appDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/generate-letter/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/generate-letter/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _data_settlementData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data/settlementData */ \"(rsc)/./src/data/settlementData.ts\");\n/* harmony import */ var _utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/visualHelpers */ \"(rsc)/./src/utils/visualHelpers.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var _utils_deepseekApi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/deepseekApi */ \"(rsc)/./src/utils/deepseekApi.ts\");\n\n\n\n\n\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { clientName, accidentDate, accidentLocation, injuryDescription, medicalTreatment, medicalBills, lostWages, painSuffering, insuranceCompany, demandAmount, caseType = \"auto_accident\", injuryType = \"soft_tissue\", jurisdiction = \"\", includeVisuals = false, hasPreExisting = false, liabilityStrength = \"clear_fault\", calculateOnly = false } = body;\n        // Format numerical values\n        const medicalBillsNum = parseFloat(medicalBills) || 0;\n        const lostWagesNum = parseFloat(lostWages) || 0;\n        const demandAmountNum = parseFloat(demandAmount) || 0;\n        // Calculate a recommended demand if none provided\n        const suggestedDemandAmount = demandAmount ? demandAmountNum : (0,_data_settlementData__WEBPACK_IMPORTED_MODULE_1__.calculateDemandAmount)(caseType, injuryType, medicalBillsNum, lostWagesNum, jurisdiction, insuranceCompany, hasPreExisting);\n        // If calculateOnly is true, just return the suggested amount\n        if (calculateOnly) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                suggestedDemandAmount\n            });\n        }\n        // Find similar cases for reference\n        const similarCases = _data_settlementData__WEBPACK_IMPORTED_MODULE_1__.settlementData.filter((s)=>s.caseType === caseType && s.injuryType === injuryType).slice(0, 3);\n        // Get insurance carrier tactics\n        const carrierTactics = (0,_data_settlementData__WEBPACK_IMPORTED_MODULE_1__.getInsuranceCarrierTactics)(insuranceCompany);\n        // Get jurisdiction specifics if available\n        const jurisdictionInfo = jurisdiction ? (0,_data_settlementData__WEBPACK_IMPORTED_MODULE_1__.getJurisdictionSpecifics)(jurisdiction) : [];\n        const currentDate = new Date().toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n        // Generate visual elements if requested\n        let visualElements = \"\";\n        if (includeVisuals) {\n            // Timeline of events\n            const timelineEvents = [\n                {\n                    date: accidentDate,\n                    event: \"Date of Accident\",\n                    details: \"Injury occurred at \" + accidentLocation\n                },\n                {\n                    date: new Date(new Date(accidentDate).getTime() + 2 * 24 * 60 * 60 * 1000).toLocaleDateString(),\n                    event: \"Initial Medical Treatment\",\n                    details: \"First medical evaluation\"\n                },\n                {\n                    date: new Date(new Date(accidentDate).getTime() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString(),\n                    event: \"Ongoing Treatment\",\n                    details: medicalTreatment\n                },\n                {\n                    date: currentDate,\n                    event: \"Demand Letter Sent\",\n                    details: \"Formal demand for compensation\"\n                }\n            ];\n            const timeline = (0,_utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__.generateTimelineHtml)(timelineEvents);\n            // Injury severity scale\n            const injuries = [\n                {\n                    level: 3,\n                    description: \"Mild injury with minimal treatment\",\n                    color: \"#2ecc71\"\n                },\n                {\n                    level: 5,\n                    description: \"Moderate injury requiring ongoing care\",\n                    color: \"#f39c12\"\n                },\n                {\n                    level: 8,\n                    description: \"Severe injury with potential long-term effects\",\n                    color: \"#e74c3c\"\n                }\n            ];\n            const severityScale = (0,_utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__.generateInjurySeverityHtml)(injuries);\n            // Damages breakdown\n            const painSufferingValue = parseFloat(painSuffering) || medicalBillsNum * 2;\n            const damagesChart = (0,_utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__.generateDamagesChartHtml)(medicalBillsNum, lostWagesNum, painSufferingValue);\n            // Comparable settlements\n            const comparables = (0,_utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__.generateComparableSettlementsHtml)(similarCases);\n            visualElements = `\r\n${timeline}\r\n\r\n${severityScale}\r\n\r\n${damagesChart}\r\n\r\n${comparables}\r\n      `;\n        }\n        // Generate document list\n        const supportingDocs = (0,_utils_visualHelpers__WEBPACK_IMPORTED_MODULE_2__.generateDocumentList)([\n            {\n                title: \"Medical Records\",\n                description: \"Complete records from treating physicians\"\n            },\n            {\n                title: \"Medical Bills\",\n                description: \"Itemized billing statements totaling $\" + medicalBillsNum.toLocaleString()\n            },\n            {\n                title: \"Wage Loss Documentation\",\n                description: \"Employer verification of lost income\"\n            },\n            {\n                title: \"Photographic Evidence\",\n                description: \"Images of injuries and accident scene\"\n            }\n        ]);\n        // Prepare data for AI analysis\n        const formData = {\n            clientName,\n            accidentDate,\n            accidentLocation,\n            injuryDescription,\n            medicalTreatment,\n            medicalBillsNum,\n            lostWagesNum,\n            painSuffering,\n            insuranceCompany,\n            suggestedDemandAmount,\n            caseType,\n            injuryType,\n            jurisdiction,\n            hasPreExisting,\n            liabilityStrength,\n            jurisdictionInfo,\n            carrierTactics,\n            similarCases\n        };\n        // Construct AI prompt for letter generation\n        const customPrompt = `\r\nYou are a skilled personal injury attorney tasked with drafting a professional demand letter to an insurance company.\r\n\r\nUse the following case information to create a personalized, compelling demand letter:\r\n${JSON.stringify(formData, null, 2)}\r\n\r\nThe letter should include:\r\n1. Standard header with date, insurance company, and claim details\r\n2. Introduction stating this is a formal demand\r\n3. Clear liability section addressing fault based on the ${liabilityStrength} situation\r\n4. Detailed injuries and medical treatment section\r\n5. Itemized damages section covering medical expenses, lost wages, and pain/suffering\r\n6. Case valuation and justification for the demand amount\r\n7. Formal demand statement with the amount of $${suggestedDemandAmount.toLocaleString()}\r\n8. Closing with attorney information\r\n\r\nIMPORTANT GUIDELINES:\r\n- Use professional legal language but remain concise and direct\r\n- Tailor arguments to the specific circumstances of this case\r\n- Reference the jurisdiction's laws if provided\r\n- Address any pre-existing conditions if applicable\r\n- Match the tone to the liability strength (more assertive for clear fault)\r\n- Format the letter properly with clear sections and headings\r\n- Include only factual information provided in the case details\r\n- Do not use placeholder text that requires manual filling in\r\n\r\nFormat the letter with appropriate spacing between sections.\r\n`;\n        // Use DeepSeek API to generate the letter content\n        const analysisResponse = await _utils_deepseekApi__WEBPACK_IMPORTED_MODULE_4__[\"default\"].analyzeData({\n            formData,\n            analysisType: \"custom\",\n            customPrompt\n        });\n        // Get the AI-generated letter content\n        let letterContent = analysisResponse.result;\n        // Add visual elements if requested\n        if (includeVisuals) {\n            letterContent += `\\n\\n${visualElements}`;\n        }\n        // Add supporting documents section if not included by AI\n        if (!letterContent.includes(\"SUPPORTING DOCUMENTATION\")) {\n            letterContent += `\\n\\nSUPPORTING DOCUMENTATION\\n\\n${supportingDocs}`;\n        }\n        // Save the generated letter to the database\n        const savedLetter = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.handyLaw.create({\n            data: {\n                clientName,\n                insuranceCompany,\n                accidentDate,\n                accidentLocation,\n                injuryDescription,\n                medicalTreatment,\n                medicalBills: medicalBillsNum,\n                lostWages: lostWagesNum,\n                painSuffering,\n                demandAmount: suggestedDemandAmount,\n                caseType,\n                injuryType,\n                jurisdiction,\n                includeVisuals,\n                hasPreExisting,\n                liabilityStrength,\n                letterContent\n            }\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            letterId: savedLetter.id,\n            letterContent,\n            suggestedDemandAmount\n        });\n    } catch (error) {\n        console.error(\"Error in generate-letter API:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/generate-letter/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/data/settlementData.ts":
/*!************************************!*\
  !*** ./src/data/settlementData.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDemandAmount: () => (/* binding */ calculateDemandAmount),\n/* harmony export */   getInsuranceCarrierTactics: () => (/* binding */ getInsuranceCarrierTactics),\n/* harmony export */   getJurisdictionSpecifics: () => (/* binding */ getJurisdictionSpecifics),\n/* harmony export */   settlementData: () => (/* binding */ settlementData)\n/* harmony export */ });\n// Sample historical settlement data\nconst settlementData = [\n    {\n        caseType: \"auto_accident\",\n        injuryType: \"whiplash\",\n        jurisdiction: \"California\",\n        insuranceCarrier: \"State Farm\",\n        medicalExpenses: 15000,\n        lostWages: 5000,\n        nonEconomicDamages: 30000,\n        totalSettlement: 50000,\n        timeToSettlement: 180,\n        litigated: false,\n        yearSettled: 2023,\n        keyFactors: [\n            \"clear liability\",\n            \"complete treatment\",\n            \"good documentation\"\n        ]\n    },\n    {\n        caseType: \"auto_accident\",\n        injuryType: \"back_injury\",\n        jurisdiction: \"Texas\",\n        insuranceCarrier: \"Allstate\",\n        medicalExpenses: 35000,\n        lostWages: 12000,\n        nonEconomicDamages: 75000,\n        totalSettlement: 122000,\n        timeToSettlement: 270,\n        litigated: true,\n        yearSettled: 2023,\n        keyFactors: [\n            \"disputed liability\",\n            \"surgery required\",\n            \"permanent impairment\"\n        ]\n    },\n    {\n        caseType: \"slip_and_fall\",\n        injuryType: \"fracture\",\n        jurisdiction: \"New York\",\n        insuranceCarrier: \"Travelers\",\n        medicalExpenses: 28000,\n        lostWages: 8500,\n        nonEconomicDamages: 42000,\n        totalSettlement: 78500,\n        timeToSettlement: 210,\n        litigated: false,\n        yearSettled: 2022,\n        keyFactors: [\n            \"shared liability\",\n            \"full recovery\",\n            \"commercial property\"\n        ]\n    },\n    {\n        caseType: \"auto_accident\",\n        injuryType: \"tbi\",\n        jurisdiction: \"Florida\",\n        insuranceCarrier: \"Progressive\",\n        medicalExpenses: 95000,\n        lostWages: 45000,\n        nonEconomicDamages: 350000,\n        totalSettlement: 490000,\n        timeToSettlement: 420,\n        litigated: true,\n        yearSettled: 2023,\n        keyFactors: [\n            \"clear liability\",\n            \"objective findings\",\n            \"expert testimony\",\n            \"life care plan\"\n        ]\n    },\n    {\n        caseType: \"medical_malpractice\",\n        injuryType: \"surgical_error\",\n        jurisdiction: \"Illinois\",\n        insuranceCarrier: \"The Doctors Company\",\n        medicalExpenses: 125000,\n        lostWages: 60000,\n        nonEconomicDamages: 500000,\n        totalSettlement: 685000,\n        timeToSettlement: 540,\n        litigated: true,\n        yearSettled: 2022,\n        keyFactors: [\n            \"clear standard of care violation\",\n            \"permanent injury\",\n            \"multiple experts\"\n        ]\n    },\n    {\n        caseType: \"product_liability\",\n        injuryType: \"burn\",\n        jurisdiction: \"Pennsylvania\",\n        insuranceCarrier: \"CNA\",\n        medicalExpenses: 75000,\n        lostWages: 25000,\n        nonEconomicDamages: 200000,\n        totalSettlement: 300000,\n        timeToSettlement: 365,\n        litigated: true,\n        yearSettled: 2023,\n        keyFactors: [\n            \"design defect\",\n            \"scarring\",\n            \"recalled product\"\n        ]\n    },\n    {\n        caseType: \"auto_accident\",\n        injuryType: \"soft_tissue\",\n        jurisdiction: \"Georgia\",\n        insuranceCarrier: \"GEICO\",\n        medicalExpenses: 8500,\n        lostWages: 3000,\n        nonEconomicDamages: 12000,\n        totalSettlement: 23500,\n        timeToSettlement: 150,\n        litigated: false,\n        yearSettled: 2023,\n        keyFactors: [\n            \"minor impact\",\n            \"full recovery\",\n            \"gap in treatment\"\n        ]\n    },\n    {\n        caseType: \"premises_liability\",\n        injuryType: \"back_injury\",\n        jurisdiction: \"Ohio\",\n        insuranceCarrier: \"Liberty Mutual\",\n        medicalExpenses: 42000,\n        lostWages: 18000,\n        nonEconomicDamages: 65000,\n        totalSettlement: 125000,\n        timeToSettlement: 300,\n        litigated: false,\n        yearSettled: 2022,\n        keyFactors: [\n            \"hazardous condition\",\n            \"prior complaints\",\n            \"aggravation of pre-existing condition\"\n        ]\n    }\n];\n// Helper functions for demand calculation\nfunction calculateDemandAmount(caseType, injuryType, medicalExpenses, lostWages, jurisdiction, insuranceCarrier, hasPreExisting = false) {\n    // Filter similar cases\n    const similarCases = settlementData.filter((settlement)=>settlement.caseType === caseType && settlement.injuryType === injuryType && (jurisdiction ? settlement.jurisdiction === jurisdiction : true) && (insuranceCarrier ? settlement.insuranceCarrier === insuranceCarrier : true));\n    if (similarCases.length === 0) {\n        // Default multiplier if no similar cases\n        const defaultMultipliers = {\n            \"soft_tissue\": 1.5,\n            \"whiplash\": 2,\n            \"back_injury\": 3,\n            \"fracture\": 3.5,\n            \"tbi\": 5,\n            \"surgical_error\": 4,\n            \"burn\": 3.5\n        };\n        const multiplier = defaultMultipliers[injuryType] || 2;\n        return (medicalExpenses + lostWages) * multiplier;\n    }\n    // Calculate average multiplier from similar cases\n    const avgMultiplier = similarCases.reduce((sum, curr)=>{\n        const caseMultiplier = curr.totalSettlement / (curr.medicalExpenses + curr.lostWages);\n        return sum + caseMultiplier;\n    }, 0) / similarCases.length;\n    // Adjust multiplier for pre-existing conditions\n    const adjustedMultiplier = hasPreExisting ? avgMultiplier * 0.85 : avgMultiplier;\n    // Calculate recommended demand amount\n    let demandAmount = (medicalExpenses + lostWages) * adjustedMultiplier;\n    // Round to nearest $500\n    return Math.ceil(demandAmount / 500) * 500;\n}\nfunction getInsuranceCarrierTactics(carrierName) {\n    const carrierTactics = {\n        \"State Farm\": [\n            \"Likely to make low initial offers\",\n            \"Often disputes causation of injuries\",\n            \"May delay settlement until close to trial\"\n        ],\n        \"Allstate\": [\n            \"Known for 'deny, delay, defend' strategy\",\n            \"Often challenges medical necessity of treatment\",\n            \"May use computer software to evaluate claims\"\n        ],\n        \"GEICO\": [\n            \"Quick to offer settlements on clear liability cases\",\n            \"Often disputes soft tissue injury values\",\n            \"May respond well to detailed medical documentation\"\n        ],\n        \"Progressive\": [\n            \"Often makes quick, low offers hoping for acceptance\",\n            \"May contact claimants directly to negotiate\",\n            \"More likely to settle before litigation\"\n        ],\n        \"Liberty Mutual\": [\n            \"Typically begins with offers below market value\",\n            \"Often disputes the need for future treatment\",\n            \"More likely to negotiate reasonably with firm deadlines\"\n        ],\n        \"Travelers\": [\n            \"Generally professional in claim handling\",\n            \"May focus on gaps in treatment or pre-existing conditions\",\n            \"More likely to settle cases with strong liability evidence\"\n        ]\n    };\n    return carrierTactics[carrierName] || [\n        \"Evaluate initial offers carefully\",\n        \"Document all communications\",\n        \"Be prepared for standard delay tactics\"\n    ];\n}\nfunction getJurisdictionSpecifics(jurisdiction) {\n    const jurisdictionInfo = {\n        \"California\": [\n            \"Pure comparative negligence state\",\n            \"Two-year statute of limitations\",\n            \"No cap on non-economic damages for most cases\"\n        ],\n        \"Texas\": [\n            \"Modified comparative fault (51% bar)\",\n            \"Two-year statute of limitations\",\n            \"Caps on punitive damages\"\n        ],\n        \"Florida\": [\n            \"Pure comparative negligence state\",\n            \"Four-year statute of limitations\",\n            \"PIP state requiring serious injury threshold for pain and suffering\"\n        ],\n        \"New York\": [\n            \"Pure comparative negligence state\",\n            \"Three-year statute of limitations\",\n            \"No-fault state with serious injury threshold\"\n        ],\n        \"Illinois\": [\n            \"Modified comparative fault (51% bar)\",\n            \"Two-year statute of limitations\",\n            \"No caps on damages\"\n        ]\n    };\n    return jurisdictionInfo[jurisdiction] || [\n        \"Research specific statutes of limitations\",\n        \"Verify comparative negligence standards\",\n        \"Check for caps on non-economic damages\"\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/data/settlementData.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Check if Prisma is disabled by checking if the schema file has comments\nlet isPrismaDisabled = false;\ntry {\n    // This is a simple way to check if Prisma is disabled\n    // We'll just assume it's disabled for now since we manually commented out the schema\n    isPrismaDisabled = true;\n} catch (error) {\n    console.warn(\"Error checking Prisma status:\", error);\n}\n// Create a mock client if Prisma is disabled\nconst createMockPrismaClient = ()=>{\n    return {\n        handyLaw: {\n            create: async (data)=>{\n                console.log(\"Mock Prisma: Creating HandyLaw entry\", data);\n                return {\n                    id: Math.floor(Math.random() * 1000),\n                    ...data.data,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                };\n            },\n            findMany: async ()=>{\n                console.log(\"Mock Prisma: Finding HandyLaw entries\");\n                return [];\n            }\n        },\n        settlementData: {\n            create: async (data)=>{\n                console.log(\"Mock Prisma: Creating SettlementData entry\", data);\n                return {\n                    id: Math.floor(Math.random() * 1000),\n                    ...data.data\n                };\n            },\n            findMany: async ()=>{\n                console.log(\"Mock Prisma: Finding SettlementData entries\");\n                return [];\n            }\n        },\n        // Add a disconnect method to avoid errors\n        $disconnect: async ()=>{\n            console.log(\"Mock Prisma: Disconnecting\");\n        }\n    };\n};\nconst prisma = isPrismaDisabled ? createMockPrismaClient() : global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (!isPrismaDisabled && \"development\" !== \"production\") global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFPOUMsMEVBQTBFO0FBQzFFLElBQUlDLG1CQUFtQjtBQUN2QixJQUFJO0lBQ0Ysc0RBQXNEO0lBQ3RELHFGQUFxRjtJQUNyRkEsbUJBQW1CO0FBQ3JCLEVBQUUsT0FBT0MsT0FBTztJQUNkQyxRQUFRQyxJQUFJLENBQUMsaUNBQWlDRjtBQUNoRDtBQUVBLDZDQUE2QztBQUM3QyxNQUFNRyx5QkFBeUI7SUFDN0IsT0FBTztRQUNMQyxVQUFVO1lBQ1JDLFFBQVEsT0FBT0M7Z0JBQ2JMLFFBQVFNLEdBQUcsQ0FBQyx3Q0FBd0NEO2dCQUNwRCxPQUFPO29CQUNMRSxJQUFJQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSztvQkFDL0IsR0FBR0wsS0FBS0EsSUFBSTtvQkFDWk0sV0FBVyxJQUFJQztvQkFDZkMsV0FBVyxJQUFJRDtnQkFDakI7WUFDRjtZQUNBRSxVQUFVO2dCQUNSZCxRQUFRTSxHQUFHLENBQUM7Z0JBQ1osT0FBTyxFQUFFO1lBQ1g7UUFDRjtRQUNBUyxnQkFBZ0I7WUFDZFgsUUFBUSxPQUFPQztnQkFDYkwsUUFBUU0sR0FBRyxDQUFDLDhDQUE4Q0Q7Z0JBQzFELE9BQU87b0JBQ0xFLElBQUlDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLO29CQUMvQixHQUFHTCxLQUFLQSxJQUFJO2dCQUNkO1lBQ0Y7WUFDQVMsVUFBVTtnQkFDUmQsUUFBUU0sR0FBRyxDQUFDO2dCQUNaLE9BQU8sRUFBRTtZQUNYO1FBQ0Y7UUFDQSwwQ0FBMEM7UUFDMUNVLGFBQWE7WUFDWGhCLFFBQVFNLEdBQUcsQ0FBQztRQUNkO0lBQ0Y7QUFDRjtBQUVPLE1BQU1XLFNBQVNuQixtQkFDbEJJLDJCQUNDZ0IsT0FBT0QsTUFBTSxJQUFJLElBQUlwQix3REFBWUEsR0FBSTtBQUUxQyxJQUFJLENBQUNDLG9CQUFvQnFCLGtCQUF5QixjQUFjRCxPQUFPRCxNQUFNLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFuZHlsYXcvLi9zcmMvbGliL3ByaXNtYS50cz8wMWQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuXHJcbi8vIFByZXZlbnQgbXVsdGlwbGUgaW5zdGFuY2VzIG9mIFByaXNtYSBDbGllbnQgaW4gZGV2ZWxvcG1lbnRcclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gIHZhciBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZDtcclxufVxyXG5cclxuLy8gQ2hlY2sgaWYgUHJpc21hIGlzIGRpc2FibGVkIGJ5IGNoZWNraW5nIGlmIHRoZSBzY2hlbWEgZmlsZSBoYXMgY29tbWVudHNcclxubGV0IGlzUHJpc21hRGlzYWJsZWQgPSBmYWxzZTtcclxudHJ5IHtcclxuICAvLyBUaGlzIGlzIGEgc2ltcGxlIHdheSB0byBjaGVjayBpZiBQcmlzbWEgaXMgZGlzYWJsZWRcclxuICAvLyBXZSdsbCBqdXN0IGFzc3VtZSBpdCdzIGRpc2FibGVkIGZvciBub3cgc2luY2Ugd2UgbWFudWFsbHkgY29tbWVudGVkIG91dCB0aGUgc2NoZW1hXHJcbiAgaXNQcmlzbWFEaXNhYmxlZCA9IHRydWU7XHJcbn0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgY29uc29sZS53YXJuKCdFcnJvciBjaGVja2luZyBQcmlzbWEgc3RhdHVzOicsIGVycm9yKTtcclxufVxyXG5cclxuLy8gQ3JlYXRlIGEgbW9jayBjbGllbnQgaWYgUHJpc21hIGlzIGRpc2FibGVkXHJcbmNvbnN0IGNyZWF0ZU1vY2tQcmlzbWFDbGllbnQgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGhhbmR5TGF3OiB7XHJcbiAgICAgIGNyZWF0ZTogYXN5bmMgKGRhdGE6IGFueSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdNb2NrIFByaXNtYTogQ3JlYXRpbmcgSGFuZHlMYXcgZW50cnknLCBkYXRhKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApLFxyXG4gICAgICAgICAgLi4uZGF0YS5kYXRhLFxyXG4gICAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgICAgZmluZE1hbnk6IGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnTW9jayBQcmlzbWE6IEZpbmRpbmcgSGFuZHlMYXcgZW50cmllcycpO1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHNldHRsZW1lbnREYXRhOiB7XHJcbiAgICAgIGNyZWF0ZTogYXN5bmMgKGRhdGE6IGFueSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdNb2NrIFByaXNtYTogQ3JlYXRpbmcgU2V0dGxlbWVudERhdGEgZW50cnknLCBkYXRhKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApLFxyXG4gICAgICAgICAgLi4uZGF0YS5kYXRhXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgICAgZmluZE1hbnk6IGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnTW9jayBQcmlzbWE6IEZpbmRpbmcgU2V0dGxlbWVudERhdGEgZW50cmllcycpO1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8vIEFkZCBhIGRpc2Nvbm5lY3QgbWV0aG9kIHRvIGF2b2lkIGVycm9yc1xyXG4gICAgJGRpc2Nvbm5lY3Q6IGFzeW5jICgpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ01vY2sgUHJpc21hOiBEaXNjb25uZWN0aW5nJyk7XHJcbiAgICB9XHJcbiAgfSBhcyB1bmtub3duIGFzIFByaXNtYUNsaWVudDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBpc1ByaXNtYURpc2FibGVkIFxyXG4gID8gY3JlYXRlTW9ja1ByaXNtYUNsaWVudCgpIFxyXG4gIDogKGdsb2JhbC5wcmlzbWEgfHwgbmV3IFByaXNtYUNsaWVudCgpKTtcclxuXHJcbmlmICghaXNQcmlzbWFEaXNhYmxlZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWwucHJpc21hID0gcHJpc21hOyAiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiaXNQcmlzbWFEaXNhYmxlZCIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJjcmVhdGVNb2NrUHJpc21hQ2xpZW50IiwiaGFuZHlMYXciLCJjcmVhdGUiLCJkYXRhIiwibG9nIiwiaWQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjcmVhdGVkQXQiLCJEYXRlIiwidXBkYXRlZEF0IiwiZmluZE1hbnkiLCJzZXR0bGVtZW50RGF0YSIsIiRkaXNjb25uZWN0IiwicHJpc21hIiwiZ2xvYmFsIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/utils/deepseekApi.ts":
/*!**********************************!*\
  !*** ./src/utils/deepseekApi.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepSeekAPI: () => (/* binding */ DeepSeekAPI),\n/* harmony export */   deepseekApi: () => (/* binding */ deepseekApi),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\nclass DeepSeekAPI {\n    constructor(){\n        // Load from environment variables\n        this.apiKey = process.env.DEEPSEEK_API_KEY || \"\";\n        this.apiUrl = process.env.DEEPSEEK_API_URL || \"https://api.deepseek.com/v1\";\n        if (!this.apiKey) {\n            console.warn(\"DeepSeek API key not found in environment variables\");\n        }\n    }\n    getHeaders() {\n        return {\n            \"Authorization\": `Bearer ${this.apiKey}`,\n            \"Content-Type\": \"application/json\"\n        };\n    }\n    /**\r\n   * Analyze form data using DeepSeek API\r\n   */ async analyzeData(request) {\n        try {\n            // Construct prompt based on analysis type\n            let prompt = \"\";\n            switch(request.analysisType){\n                case \"sentiment\":\n                    prompt = `Analyze the sentiment of the following form data: ${JSON.stringify(request.formData)}`;\n                    break;\n                case \"classification\":\n                    prompt = `Classify the following form data into appropriate categories: ${JSON.stringify(request.formData)}`;\n                    break;\n                case \"summary\":\n                    prompt = `Provide a summary of the following form data: ${JSON.stringify(request.formData)}`;\n                    break;\n                case \"custom\":\n                    prompt = request.customPrompt || \"\";\n                    break;\n                default:\n                    throw new Error(\"Invalid analysis type\");\n            }\n            // Include dataset if provided\n            if (request.dataset) {\n                prompt += `\\n\\nReference this dataset for analysis: ${JSON.stringify(request.dataset)}`;\n            }\n            // Make API call to DeepSeek\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(`${this.apiUrl}/chat/completions`, {\n                model: \"deepseek-chat\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are an AI assistant analyzing form data.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: prompt\n                    }\n                ],\n                temperature: 0.5,\n                max_tokens: 1000\n            }, {\n                headers: this.getHeaders()\n            });\n            // Extract and process the response\n            const result = response.data.choices[0].message.content;\n            return {\n                result,\n                metadata: {\n                    model: response.data.model,\n                    usage: response.data.usage\n                }\n            };\n        } catch (error) {\n            console.error(\"Error analyzing data with DeepSeek API:\", error.message);\n            throw new Error(`DeepSeek API error: ${error.message}`);\n        }\n    }\n}\n// Create a singleton instance\nconst deepseekApi = new DeepSeekAPI();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (deepseekApi);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdXRpbHMvZGVlcHNlZWtBcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQjtBQWdCbkIsTUFBTUM7SUFJWEMsYUFBYztRQUNaLGtDQUFrQztRQUNsQyxJQUFJLENBQUNDLE1BQU0sR0FBR0MsUUFBUUMsR0FBRyxDQUFDQyxnQkFBZ0IsSUFBSTtRQUM5QyxJQUFJLENBQUNDLE1BQU0sR0FBR0gsUUFBUUMsR0FBRyxDQUFDRyxnQkFBZ0IsSUFBSTtRQUU5QyxJQUFJLENBQUMsSUFBSSxDQUFDTCxNQUFNLEVBQUU7WUFDaEJNLFFBQVFDLElBQUksQ0FBQztRQUNmO0lBQ0Y7SUFFUUMsYUFBYTtRQUNuQixPQUFPO1lBQ0wsaUJBQWlCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQ1IsTUFBTSxDQUFDLENBQUM7WUFDeEMsZ0JBQWdCO1FBQ2xCO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELE1BQU1TLFlBQVlDLE9BQXdCLEVBQTZCO1FBQ3JFLElBQUk7WUFDRiwwQ0FBMEM7WUFDMUMsSUFBSUMsU0FBUztZQUViLE9BQVFELFFBQVFFLFlBQVk7Z0JBQzFCLEtBQUs7b0JBQ0hELFNBQVMsQ0FBQyxrREFBa0QsRUFBRUUsS0FBS0MsU0FBUyxDQUFDSixRQUFRSyxRQUFRLEVBQUUsQ0FBQztvQkFDaEc7Z0JBQ0YsS0FBSztvQkFDSEosU0FBUyxDQUFDLDhEQUE4RCxFQUFFRSxLQUFLQyxTQUFTLENBQUNKLFFBQVFLLFFBQVEsRUFBRSxDQUFDO29CQUM1RztnQkFDRixLQUFLO29CQUNISixTQUFTLENBQUMsOENBQThDLEVBQUVFLEtBQUtDLFNBQVMsQ0FBQ0osUUFBUUssUUFBUSxFQUFFLENBQUM7b0JBQzVGO2dCQUNGLEtBQUs7b0JBQ0hKLFNBQVNELFFBQVFNLFlBQVksSUFBSTtvQkFDakM7Z0JBQ0Y7b0JBQ0UsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCO1lBRUEsOEJBQThCO1lBQzlCLElBQUlQLFFBQVFRLE9BQU8sRUFBRTtnQkFDbkJQLFVBQVUsQ0FBQyx5Q0FBeUMsRUFBRUUsS0FBS0MsU0FBUyxDQUFDSixRQUFRUSxPQUFPLEVBQUUsQ0FBQztZQUN6RjtZQUVBLDRCQUE0QjtZQUM1QixNQUFNQyxXQUFXLE1BQU10Qiw2Q0FBS0EsQ0FBQ3VCLElBQUksQ0FDL0IsQ0FBQyxFQUFFLElBQUksQ0FBQ2hCLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxFQUNqQztnQkFDRWlCLE9BQU87Z0JBQ1BDLFVBQVU7b0JBQ1I7d0JBQUVDLE1BQU07d0JBQVVDLFNBQVM7b0JBQStDO29CQUMxRTt3QkFBRUQsTUFBTTt3QkFBUUMsU0FBU2I7b0JBQU87aUJBQ2pDO2dCQUNEYyxhQUFhO2dCQUNiQyxZQUFZO1lBQ2QsR0FDQTtnQkFBRUMsU0FBUyxJQUFJLENBQUNuQixVQUFVO1lBQUc7WUFHL0IsbUNBQW1DO1lBQ25DLE1BQU1vQixTQUFTVCxTQUFTVSxJQUFJLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUNDLE9BQU8sQ0FBQ1AsT0FBTztZQUV2RCxPQUFPO2dCQUNMSTtnQkFDQUksVUFBVTtvQkFDUlgsT0FBT0YsU0FBU1UsSUFBSSxDQUFDUixLQUFLO29CQUMxQlksT0FBT2QsU0FBU1UsSUFBSSxDQUFDSSxLQUFLO2dCQUM1QjtZQUNGO1FBQ0YsRUFBRSxPQUFPQyxPQUFZO1lBQ25CNUIsUUFBUTRCLEtBQUssQ0FBQywyQ0FBMkNBLE1BQU1ILE9BQU87WUFDdEUsTUFBTSxJQUFJZCxNQUFNLENBQUMsb0JBQW9CLEVBQUVpQixNQUFNSCxPQUFPLENBQUMsQ0FBQztRQUN4RDtJQUNGO0FBQ0Y7QUFFQSw4QkFBOEI7QUFDdkIsTUFBTUksY0FBYyxJQUFJckMsY0FBYztBQUU3QyxpRUFBZXFDLFdBQVdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYW5keWxhdy8uL3NyYy91dGlscy9kZWVwc2Vla0FwaS50cz9jMDQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG4vLyBUeXBlc1xyXG5leHBvcnQgaW50ZXJmYWNlIEFuYWx5c2lzUmVxdWVzdCB7XHJcbiAgZm9ybURhdGE6IGFueTsgIC8vIFRoZSBkYXRhIGNvbGxlY3RlZCBmcm9tIHRoZSBmb3JtXHJcbiAgZGF0YXNldD86IGFueTsgIC8vIFJlZmVyZW5jZSBkYXRhc2V0IChvcHRpb25hbClcclxuICBhbmFseXNpc1R5cGU6ICdzZW50aW1lbnQnIHwgJ2NsYXNzaWZpY2F0aW9uJyB8ICdzdW1tYXJ5JyB8ICdjdXN0b20nO1xyXG4gIGN1c3RvbVByb21wdD86IHN0cmluZzsgIC8vIEZvciBjdXN0b20gYW5hbHlzaXNcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBbmFseXNpc1Jlc3BvbnNlIHtcclxuICByZXN1bHQ6IGFueTtcclxuICBjb25maWRlbmNlPzogbnVtYmVyO1xyXG4gIG1ldGFkYXRhPzogYW55O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRGVlcFNlZWtBUEkge1xyXG4gIHByaXZhdGUgYXBpS2V5OiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBhcGlVcmw6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAvLyBMb2FkIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgICB0aGlzLmFwaUtleSA9IHByb2Nlc3MuZW52LkRFRVBTRUVLX0FQSV9LRVkgfHwgJyc7XHJcbiAgICB0aGlzLmFwaVVybCA9IHByb2Nlc3MuZW52LkRFRVBTRUVLX0FQSV9VUkwgfHwgJ2h0dHBzOi8vYXBpLmRlZXBzZWVrLmNvbS92MSc7XHJcbiAgICBcclxuICAgIGlmICghdGhpcy5hcGlLZXkpIHtcclxuICAgICAgY29uc29sZS53YXJuKCdEZWVwU2VlayBBUEkga2V5IG5vdCBmb3VuZCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0SGVhZGVycygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3RoaXMuYXBpS2V5fWAsXHJcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBbmFseXplIGZvcm0gZGF0YSB1c2luZyBEZWVwU2VlayBBUElcclxuICAgKi9cclxuICBhc3luYyBhbmFseXplRGF0YShyZXF1ZXN0OiBBbmFseXNpc1JlcXVlc3QpOiBQcm9taXNlPEFuYWx5c2lzUmVzcG9uc2U+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENvbnN0cnVjdCBwcm9tcHQgYmFzZWQgb24gYW5hbHlzaXMgdHlwZVxyXG4gICAgICBsZXQgcHJvbXB0ID0gJyc7XHJcbiAgICAgIFxyXG4gICAgICBzd2l0Y2ggKHJlcXVlc3QuYW5hbHlzaXNUeXBlKSB7XHJcbiAgICAgICAgY2FzZSAnc2VudGltZW50JzpcclxuICAgICAgICAgIHByb21wdCA9IGBBbmFseXplIHRoZSBzZW50aW1lbnQgb2YgdGhlIGZvbGxvd2luZyBmb3JtIGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkocmVxdWVzdC5mb3JtRGF0YSl9YDtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2NsYXNzaWZpY2F0aW9uJzpcclxuICAgICAgICAgIHByb21wdCA9IGBDbGFzc2lmeSB0aGUgZm9sbG93aW5nIGZvcm0gZGF0YSBpbnRvIGFwcHJvcHJpYXRlIGNhdGVnb3JpZXM6ICR7SlNPTi5zdHJpbmdpZnkocmVxdWVzdC5mb3JtRGF0YSl9YDtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3N1bW1hcnknOlxyXG4gICAgICAgICAgcHJvbXB0ID0gYFByb3ZpZGUgYSBzdW1tYXJ5IG9mIHRoZSBmb2xsb3dpbmcgZm9ybSBkYXRhOiAke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuZm9ybURhdGEpfWA7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdjdXN0b20nOlxyXG4gICAgICAgICAgcHJvbXB0ID0gcmVxdWVzdC5jdXN0b21Qcm9tcHQgfHwgJyc7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGFuYWx5c2lzIHR5cGUnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gSW5jbHVkZSBkYXRhc2V0IGlmIHByb3ZpZGVkXHJcbiAgICAgIGlmIChyZXF1ZXN0LmRhdGFzZXQpIHtcclxuICAgICAgICBwcm9tcHQgKz0gYFxcblxcblJlZmVyZW5jZSB0aGlzIGRhdGFzZXQgZm9yIGFuYWx5c2lzOiAke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuZGF0YXNldCl9YDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gTWFrZSBBUEkgY2FsbCB0byBEZWVwU2Vla1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoXHJcbiAgICAgICAgYCR7dGhpcy5hcGlVcmx9L2NoYXQvY29tcGxldGlvbnNgLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIG1vZGVsOiBcImRlZXBzZWVrLWNoYXRcIiwgLy8gVXNlIGFwcHJvcHJpYXRlIG1vZGVsXHJcbiAgICAgICAgICBtZXNzYWdlczogW1xyXG4gICAgICAgICAgICB7IHJvbGU6IFwic3lzdGVtXCIsIGNvbnRlbnQ6IFwiWW91IGFyZSBhbiBBSSBhc3Npc3RhbnQgYW5hbHl6aW5nIGZvcm0gZGF0YS5cIiB9LFxyXG4gICAgICAgICAgICB7IHJvbGU6IFwidXNlclwiLCBjb250ZW50OiBwcm9tcHQgfVxyXG4gICAgICAgICAgXSxcclxuICAgICAgICAgIHRlbXBlcmF0dXJlOiAwLjUsXHJcbiAgICAgICAgICBtYXhfdG9rZW5zOiAxMDAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7IGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVycygpIH1cclxuICAgICAgKTtcclxuXHJcbiAgICAgIC8vIEV4dHJhY3QgYW5kIHByb2Nlc3MgdGhlIHJlc3BvbnNlXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGEuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnQ7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlc3VsdCxcclxuICAgICAgICBtZXRhZGF0YToge1xyXG4gICAgICAgICAgbW9kZWw6IHJlc3BvbnNlLmRhdGEubW9kZWwsXHJcbiAgICAgICAgICB1c2FnZTogcmVzcG9uc2UuZGF0YS51c2FnZVxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYW5hbHl6aW5nIGRhdGEgd2l0aCBEZWVwU2VlayBBUEk6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRGVlcFNlZWsgQVBJIGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBDcmVhdGUgYSBzaW5nbGV0b24gaW5zdGFuY2VcclxuZXhwb3J0IGNvbnN0IGRlZXBzZWVrQXBpID0gbmV3IERlZXBTZWVrQVBJKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkZWVwc2Vla0FwaTsgIl0sIm5hbWVzIjpbImF4aW9zIiwiRGVlcFNlZWtBUEkiLCJjb25zdHJ1Y3RvciIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJERUVQU0VFS19BUElfS0VZIiwiYXBpVXJsIiwiREVFUFNFRUtfQVBJX1VSTCIsImNvbnNvbGUiLCJ3YXJuIiwiZ2V0SGVhZGVycyIsImFuYWx5emVEYXRhIiwicmVxdWVzdCIsInByb21wdCIsImFuYWx5c2lzVHlwZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtRGF0YSIsImN1c3RvbVByb21wdCIsIkVycm9yIiwiZGF0YXNldCIsInJlc3BvbnNlIiwicG9zdCIsIm1vZGVsIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsInRlbXBlcmF0dXJlIiwibWF4X3Rva2VucyIsImhlYWRlcnMiLCJyZXN1bHQiLCJkYXRhIiwiY2hvaWNlcyIsIm1lc3NhZ2UiLCJtZXRhZGF0YSIsInVzYWdlIiwiZXJyb3IiLCJkZWVwc2Vla0FwaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/deepseekApi.ts\n");

/***/ }),

/***/ "(rsc)/./src/utils/visualHelpers.ts":
/*!************************************!*\
  !*** ./src/utils/visualHelpers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatCaseQuote: () => (/* binding */ formatCaseQuote),\n/* harmony export */   generateComparableSettlementsHtml: () => (/* binding */ generateComparableSettlementsHtml),\n/* harmony export */   generateDamagesChartHtml: () => (/* binding */ generateDamagesChartHtml),\n/* harmony export */   generateDocumentList: () => (/* binding */ generateDocumentList),\n/* harmony export */   generateInjurySeverityHtml: () => (/* binding */ generateInjurySeverityHtml),\n/* harmony export */   generateTimelineHtml: () => (/* binding */ generateTimelineHtml)\n/* harmony export */ });\n/**\r\n * Generates HTML for a timeline visualization\r\n */ function generateTimelineHtml(events) {\n    const sortedEvents = [\n        ...events\n    ].sort((a, b)=>new Date(a.date).getTime() - new Date(b.date).getTime());\n    let timelineHtml = `\r\n    <div style=\"font-family: Arial, sans-serif; margin: 20px 0; border: 1px solid #ccc; padding: 20px; border-radius: 5px;\">\r\n      <h3 style=\"color: #333; margin-bottom: 15px;\">CASE TIMELINE</h3>\r\n      <div style=\"position: relative; padding-left: 30px;\">\r\n  `;\n    sortedEvents.forEach((event, index)=>{\n        timelineHtml += `\r\n      <div style=\"margin-bottom: 20px; position: relative;\">\r\n        <div style=\"position: absolute; left: -30px; width: 20px; height: 20px; background-color: #3498db; border-radius: 50%; top: 0;\"></div>\r\n        ${index < sortedEvents.length - 1 ? `<div style=\"position: absolute; left: -20px; top: 20px; bottom: 0; width: 2px; background-color: #3498db;\"></div>` : \"\"}\r\n        <div style=\"font-weight: bold;\">${event.date}</div>\r\n        <div style=\"font-weight: bold; margin: 5px 0;\">${event.event}</div>\r\n        ${event.details ? `<div style=\"font-size: 0.9em; color: #555;\">${event.details}</div>` : \"\"}\r\n      </div>\r\n    `;\n    });\n    timelineHtml += `\r\n      </div>\r\n    </div>\r\n  `;\n    return timelineHtml;\n}\n/**\r\n * Generates HTML for an injury severity scale visualization\r\n */ function generateInjurySeverityHtml(injuries) {\n    let severityHtml = `\r\n    <div style=\"font-family: Arial, sans-serif; margin: 20px 0; border: 1px solid #ccc; padding: 20px; border-radius: 5px;\">\r\n      <h3 style=\"color: #333; margin-bottom: 15px;\">INJURY SEVERITY ASSESSMENT</h3>\r\n      <div style=\"display: flex; align-items: center; margin-bottom: 15px;\">\r\n  `;\n    // Generate the scale\n    for(let i = 1; i <= 10; i++){\n        const matchingInjury = injuries.find((injury)=>injury.level === i);\n        const color = matchingInjury ? matchingInjury.color : \"#e0e0e0\";\n        const highlight = matchingInjury ? `border: 2px solid #333;` : \"\";\n        severityHtml += `\r\n      <div style=\"flex: 1; text-align: center; position: relative;\">\r\n        <div style=\"height: 20px; background-color: ${color}; margin: 0 1px; ${highlight}\"></div>\r\n        <div style=\"position: absolute; top: 25px; left: 50%; transform: translateX(-50%); font-size: 12px;\">${i}</div>\r\n      </div>\r\n    `;\n    }\n    severityHtml += `</div>`;\n    // Add injury descriptions\n    injuries.forEach((injury)=>{\n        severityHtml += `\r\n      <div style=\"margin-top: 10px; display: flex; align-items: center;\">\r\n        <div style=\"width: 20px; height: 20px; background-color: ${injury.color}; margin-right: 10px;\"></div>\r\n        <div><strong>Level ${injury.level}:</strong> ${injury.description}</div>\r\n      </div>\r\n    `;\n    });\n    severityHtml += `</div>`;\n    return severityHtml;\n}\n/**\r\n * Generates HTML for a damages breakdown chart\r\n */ function generateDamagesChartHtml(medicalExpenses, lostWages, painSuffering) {\n    const total = medicalExpenses + lostWages + painSuffering;\n    const medicalPercent = (medicalExpenses / total * 100).toFixed(1);\n    const wagesPercent = (lostWages / total * 100).toFixed(1);\n    const painPercent = (painSuffering / total * 100).toFixed(1);\n    const chartHtml = `\r\n    <div style=\"font-family: Arial, sans-serif; margin: 20px 0; border: 1px solid #ccc; padding: 20px; border-radius: 5px;\">\r\n      <h3 style=\"color: #333; margin-bottom: 15px;\">DAMAGES BREAKDOWN</h3>\r\n      <div style=\"display: flex; height: 30px; margin-bottom: 15px; overflow: hidden; border-radius: 4px;\">\r\n        <div style=\"background-color: #3498db; width: ${medicalPercent}%; display: flex; align-items: center; justify-content: center; color: white; font-size: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding: 0 5px;\">Medical</div>\r\n        <div style=\"background-color: #2ecc71; width: ${wagesPercent}%; display: flex; align-items: center; justify-content: center; color: white; font-size: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding: 0 5px;\">Lost Wages</div>\r\n        <div style=\"background-color: #e74c3c; width: ${painPercent}%; display: flex; align-items: center; justify-content: center; color: white; font-size: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding: 0 5px;\">Pain & Suffering</div>\r\n      </div>\r\n      <div style=\"display: flex; margin-bottom: 10px;\">\r\n        <div style=\"flex: 1;\"><strong>Medical Expenses:</strong> $${medicalExpenses.toLocaleString()}</div>\r\n        <div style=\"flex: 1; text-align: right;\">${medicalPercent}%</div>\r\n      </div>\r\n      <div style=\"display: flex; margin-bottom: 10px;\">\r\n        <div style=\"flex: 1;\"><strong>Lost Wages:</strong> $${lostWages.toLocaleString()}</div>\r\n        <div style=\"flex: 1; text-align: right;\">${wagesPercent}%</div>\r\n      </div>\r\n      <div style=\"display: flex; margin-bottom: 10px;\">\r\n        <div style=\"flex: 1;\"><strong>Pain & Suffering:</strong> $${painSuffering.toLocaleString()}</div>\r\n        <div style=\"flex: 1; text-align: right;\">${painPercent}%</div>\r\n      </div>\r\n      <div style=\"display: flex; margin-top: 15px; border-top: 1px solid #ccc; padding-top: 10px;\">\r\n        <div style=\"flex: 1;\"><strong>TOTAL DAMAGES:</strong> $${total.toLocaleString()}</div>\r\n        <div style=\"flex: 1; text-align: right;\">100%</div>\r\n      </div>\r\n    </div>\r\n  `;\n    return chartHtml;\n}\n/**\r\n * Generates HTML for comparable settlements reference\r\n */ function generateComparableSettlementsHtml(settlements) {\n    let comparablesHtml = `\r\n    <div style=\"font-family: Arial, sans-serif; margin: 20px 0; border: 1px solid #ccc; padding: 20px; border-radius: 5px;\">\r\n      <h3 style=\"color: #333; margin-bottom: 15px;\">COMPARABLE SETTLEMENTS</h3>\r\n      <table style=\"width: 100%; border-collapse: collapse;\">\r\n        <thead>\r\n          <tr style=\"background-color: #f5f5f5;\">\r\n            <th style=\"padding: 10px; text-align: left; border-bottom: 1px solid #ddd;\">Case Type</th>\r\n            <th style=\"padding: 10px; text-align: left; border-bottom: 1px solid #ddd;\">Injury</th>\r\n            <th style=\"padding: 10px; text-align: left; border-bottom: 1px solid #ddd;\">Medical Expenses</th>\r\n            <th style=\"padding: 10px; text-align: left; border-bottom: 1px solid #ddd;\">Settlement</th>\r\n            <th style=\"padding: 10px; text-align: left; border-bottom: 1px solid #ddd;\">Multiplier</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  `;\n    settlements.forEach((settlement)=>{\n        const multiplier = (settlement.totalSettlement / settlement.medicalExpenses).toFixed(2);\n        comparablesHtml += `\r\n      <tr>\r\n        <td style=\"padding: 10px; border-bottom: 1px solid #ddd;\">${settlement.caseType.replace(\"_\", \" \")}</td>\r\n        <td style=\"padding: 10px; border-bottom: 1px solid #ddd;\">${settlement.injuryType.replace(\"_\", \" \")}</td>\r\n        <td style=\"padding: 10px; border-bottom: 1px solid #ddd;\">$${settlement.medicalExpenses.toLocaleString()}</td>\r\n        <td style=\"padding: 10px; border-bottom: 1px solid #ddd;\">$${settlement.totalSettlement.toLocaleString()}</td>\r\n        <td style=\"padding: 10px; border-bottom: 1px solid #ddd;\">${multiplier}x</td>\r\n      </tr>\r\n    `;\n    });\n    comparablesHtml += `\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  `;\n    return comparablesHtml;\n}\n/**\r\n * Generates text for document list with descriptions\r\n */ function generateDocumentList(documents) {\n    let docListText = `\r\nSUPPORTING DOCUMENTATION\r\n\r\nThe following documents are enclosed with this demand letter to substantiate our claims:\r\n\r\n`;\n    documents.forEach((doc, index)=>{\n        docListText += `${index + 1}. ${doc.title} - ${doc.description}\\n`;\n    });\n    return docListText;\n}\n/**\r\n * Formats a case quote for inclusion in demand letter\r\n */ function formatCaseQuote(caseName, citation, quote) {\n    return `\r\n\"${quote}\"\r\n- ${caseName}, ${citation}\r\n`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/visualHelpers.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-letter%2Froute&page=%2Fapi%2Fgenerate-letter%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-letter%2Froute.ts&appDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cabema%5COneDrive%5CDesktop%5Cdemandletter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();